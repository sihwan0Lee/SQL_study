SELECT

"SQL에서 가장 많이 쓰이는 문장"

"table에 저장된 데이터를 가져오는 데 쓰인다"

"SQL문의 시작"

DISTINCT

"SELECT시 중복 값을 제외하고 출력하고 싶을 때 사용한다"
"같은 결과의 행의 중복을 제거한다"

FROM

"SELECT 를 해올 table 명을 지정한다"

WHERE

"어떤 집합을 가져올 것인지에 대한 조건을 설정한다"
" =, >, <, <=, >=, !=, AND, OR "
"<>는 != 와 같다"

ORDER BY

"SELECT문에서 가져온 데이터를 정렬하는데 사용한다."
	.
	.
ORDER BY col1 ASC,
	col2 DESC
        ;

"디폴트값이 ASC(오름차순)"
"내림차순은 DESC"

SELECT
	DISTINCT col1, col2
FROM
	table1
ORDER BY
	col1, col2   
table1 으로부터 col1 + col2 중복된 행은 제외하고, col1 + col2 기준으로 정렬

LIMIT

"특정 집합 출력 시 출력하는 행의 수를 한정한다"
"LIMIT N"
"LIMIT N OFFSET M"
출력하는 행의 수는 N개, OFFSET으로 인덱스 M번 부터 시작.
시작위치가 3이라면, (0,1,2,3 ) 즉 4번째 부터 시작한다는 의미.

FETCH

"특정 집합 출력 시 행의 수를 한정하는 역할을 한다"
"부분 범위 처리시 사용"
FETCH FIRST N ROW ONLY
N(숫자)만큼의 행 리턴, N없으면 단 한건만 출력

IN, NOT IN

"특정 집합(col or 리스트)에서 특정 집합 혹은 리스트가 존재하는지 판단하는 연산자"

SELECT
	*
FROM
	TABLE_NAME
WHERE COL_NAME IN (VALUE1, VALUE2)
;
COL_NAME이 가지고 있는 집합에서 VALUE1, VALUE2등의 값이 존재하는지 확인

SELECT
*
FROM
	TABLE_NAME
WHERE COL_NAME IN
	(SELECT COL_NAME2 
	FROM
	TABLE_NAME2)
;
COL_NAME이 가지고 있는 집합에서, TABLE_NAME2table의 COL_NAME2의 집합이 존재하는지 확인
"IN은 OR,= 의 조합과 같고"
"NOT IN은 AND,<>의 조합과 같다"

SELECT
CUSTOMER_ID , RENTAL_ID
, RETURN_DATE
FROM RENTAL WHERE
CUSTOMER_ID IN (1, 2)
ORDER BY RETURN_DATE
DESC;

CUSTOMER_ID가 1 혹은 2인 행을 출력한다.
그 결과를 RETURN_DATE 컬럼 내림차순으로 출력한다.

SELECT
CUSTOMER_ID , RENTAL_ID
, RETURN_DATE
FROM RENTAL WHERE
CUSTOMER_ID NOT IN (1, 2)
ORDER BY RETURN_DATE
DESC;

재밌는 점은 IN(1,2)는 1 또는 2를 다 출력하지만, NOT IN(1,2)는 1, 2 둘다 포함되지 않는다.

BETWEEN, NOT BETWEEN

"특정 집합에서 col의 값이 특정 범위 안에 들어가는 집합을 출력"

SELECT
	CUSTOMER_ID, 
    PAYMENT_ID,
	AMOUNT
FROM
	PAYMENT
WHERE 
	AMOUNT BETWEEN 8 AND 9;


LIKE, NOT LIKE

"col의 값이 특정 값과 유사한 패턴을 갖는 집합을 출력한다"
" % 는 어떤 문자 혹은 문자열이든지 매칭 되었다고 판단"
" _ 는 한 개의 문자가 어떤 문자이든지 매칭 되었다고 판단"

SELECT
FIRST_NAME , LAST_NAME
FROM
CUSTOMER
WHERE
FIRST_NAME LIKE 'Jen%';
Jen 이후 문자 혹은 문자열은 모두 매칭 되어버린다
" %er%, _her% 이런식으로 사용하면 된다"

IS NULL, IS NOT NULL
"특정 col 혹은 값이 NULL인지 아닌지를 판단하는 연산자"

SELECT *
FROM TABLE_NAME
WHERE COLUMN_NAME IS NULL;
COLUNM_NAME col의 값이 널인 집합을 출력한다.

SELECT *
FROM TABLE_NAME
WHERE COLUMN_NAME IS NOT NULL;
COLUNM_NAME col의 값이 널이 아닌 집합을 출력한다.




SELECT DISTINCT 문

SELECT 시 DISTINCT 를 사용하면 중복 값을 제외한 결과값이 출력된다.
즉 같은 결과의 행이라면 중복을 제거할 수 있다.

기본 형태

SELECT
	DISTINCT col
FROM	
	TABLE_NAME;

col1의 값이 중복 값 존재 시 중복 값을 제거한다